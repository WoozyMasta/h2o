(stack) --help  ::  
Show this help text

(stack) --version  ::  
Show version

(stack) --numeric-version  ::  
Show only version number

(stack) --hpack-numeric-version  ::  
Show only hpack's version number

(stack) --docker  ::  
Run 'stack --docker-help' for details

(stack) --nix  ::  
Run 'stack --nix-help' for details

(stack) --verbosity  ::  VERBOSITY
Verbosity: silent, error, warn, info, debug

(stack) -v --verbose  ::  
Enable verbose mode: verbosity level "debug"

(stack) --silent  ::  
Enable silent mode: verbosity level "silent"

(stack) --time-in-log  ::  
Enable/disable inclusion of timings in logs, for the purposes of using diff with logs (default: enabled)

(stack) --no-time-in-log  ::  
Enable/disable inclusion of timings in logs, for the purposes of using diff with logs (default: enabled)

(stack) --stack-root  ::  STACK-ROOT
Absolute path to the global stack root directory (Overrides any STACK_ROOT environment variable)

(stack) --work-dir  ::  WORK-DIR
Relative path of work directory (Overrides any STACK_WORK environment variable, default is '.stack-work')

(stack) --system-ghc  ::  
Enable/disable using the system installed GHC (on the PATH) if it is available and its version matches. Disabled by default.

(stack) --no-system-ghc  ::  
Enable/disable using the system installed GHC (on the PATH) if it is available and its version matches. Disabled by default.

(stack) --install-ghc  ::  
Enable/disable downloading and installing GHC if necessary (can be done manually with stack setup) (default: enabled)

(stack) --no-install-ghc  ::  
Enable/disable downloading and installing GHC if necessary (can be done manually with stack setup) (default: enabled)

(stack) --arch  ::  ARCH
System architecture, e.g. i386, x86_64

(stack) --ghc-variant  ::  VARIANT
Specialized GHC variant, e.g. integersimple (incompatible with --system-ghc)

(stack) --ghc-build  ::  BUILD
Specialized GHC build, e.g. 'gmp4' or 'standard' (usually auto-detected)

(stack) -j --jobs  ::  JOBS
Number of concurrent jobs to run

(stack) --extra-include-dirs  ::  DIR
Extra directories to check for C header files

(stack) --extra-lib-dirs  ::  DIR
Extra directories to check for libraries

(stack) --custom-preprocessor-extensions  ::  EXT
Extensions used for custom preprocessors

(stack) --with-gcc  ::  PATH-TO-GCC
Use gcc found at PATH-TO-GCC

(stack) --with-hpack  ::  HPACK
Use HPACK executable (overrides bundled Hpack)

(stack) --skip-ghc-check  ::  
Enable/disable skipping the GHC version and architecture check (default: disabled)

(stack) --no-skip-ghc-check  ::  
Enable/disable skipping the GHC version and architecture check (default: disabled)

(stack) --skip-msys  ::  
Enable/disable skipping the local MSYS installation (Windows only) (default: disabled)

(stack) --no-skip-msys  ::  
Enable/disable skipping the local MSYS installation (Windows only) (default: disabled)

(stack) --local-bin-path  ::  DIR
Install binaries to DIR

(stack) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack) --modify-code-page  ::  
Enable/disable setting the codepage to support UTF-8 (Windows only) (default: enabled)

(stack) --no-modify-code-page  ::  
Enable/disable setting the codepage to support UTF-8 (Windows only) (default: enabled)

(stack) --allow-different-user  ::  
Enable/disable permission for users other than the owner of the stack root directory to use a stack installation (POSIX only) (default: true inside Docker, otherwise false)

(stack) --no-allow-different-user  ::  
Enable/disable permission for users other than the owner of the stack root directory to use a stack installation (POSIX only) (default: true inside Docker, otherwise false)

(stack) --dump-logs  ::  
Enable/disable dump the build output logs for local packages to the console (default: dump warning logs)

(stack) --no-dump-logs  ::  
Enable/disable dump the build output logs for local packages to the console (default: dump warning logs)

(stack) --color --colour  ::  WHEN
Specify when to use color in output; WHEN is 'always', 'never', or 'auto'. On Windows versions before Windows 10, for terminals that do not support color codes, the default is 'never'; color may work on terminals that support color codes

(stack) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack) --resolver  ::  RESOLVER
Override resolver in project file

(stack) --compiler  ::  COMPILER
Use the specified compiler

(stack) --terminal  ::  
Enable/disable overriding terminal detection in the case of running in a false terminal

(stack) --no-terminal  ::  
Enable/disable overriding terminal detection in the case of running in a false terminal

(stack) --stack-colors --stack-colours  ::  STYLES
Specify stack's output styles; STYLES is a colon-delimited sequence of key=value, where 'key' is a style name and 'value' is a semicolon-delimited list of 'ANSI' SGR (Select Graphic Rendition) control codes (in decimal). Use 'stack ls stack-colors --basic' to see the current sequence. In shells where a semicolon is a command separator, enclose STYLES in quotes.

(stack) --terminal-width  ::  INT
Specify the width of the terminal, used for pretty-print messages

(stack) --stack-yaml  ::  STACK-YAML
Override project stack.yaml file (overrides any STACK_YAML environment variable)

(stack) --lock-file  ::  ARG
Specify how to interact with lock files. Default: read/write. If resolver is overridden: read-only

(stack) --full  ::  '
query Query general build information (experimental)




(stack)
build                     (Build the package(s) in this directory/configuration)
install                   (Shortcut for 'build --copy-bins')
uninstall                 (DEPRECATED: This command performs no actions, and is)
test                      (Shortcut for 'build --test')
bench                     (Shortcut for 'build --bench')
haddock                   (Shortcut for 'build --haddock')
new                       (Create a new project from a template. Run `stack)
templates                 (Show how to find templates available for `stack new'.)
init                      (Create stack project config from cabal or hpack)
setup                     (Get the appropriate GHC for your project)
path                      (Print out handy path information)
ls                        (List command. (Supports snapshots, dependencies and)
unpack                    (Unpack one or more packages locally)
update                    (Update the package index)
upgrade                   (Upgrade to the latest stack)
upload                    (Upload a package to Hackage)
sdist                     (Create source distribution tarballs)
dot                       (Visualize your project's dependency graph using)
ghc                       (Run ghc)
hoogle                    (Run hoogle, the Haskell API search engine. Use the)
exec                      (Execute a command. If the command is absent, the)
run                       (Build and run an executable. Defaults to the first)
ghci                      (Run ghci in the context of package(s) (experimental))
repl                      (Run ghci in the context of package(s) (experimental))
runghc                    (Run runghc)
runhaskell                (Run runghc (alias for 'runghc'))
script                    (Run a Stack Script)
eval                      (Evaluate some haskell code inline. Shortcut for)
clean                     (Delete build artefacts for the project packages.)
purge                     (Delete the project stack working directories)
query                     (Query general build information (experimental))
list                      (List package id's in snapshot (experimental))
ide                       (IDE-specific commands)
docker                    (Subcommands specific to Docker use)
config                    (Subcommands for accessing and modifying configuration)
hpc                       (Subcommands specific to Haskell Program Coverage)



(stack build) --dry-run  ::  
Don't build anything, just prepare to

(stack build) --pedantic  ::  
Turn on -Wall and -Werror

(stack build) --fast  ::  
Turn off optimizations (-O0)

(stack build) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack build) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack build) --dependencies-only  ::  
A synonym for --only-dependencies

(stack build) --only-snapshot  ::  
Only build packages for the snapshot database, not the local database

(stack build) --only-dependencies  ::  
Only build packages that are dependencies of targets on the command line

(stack build) --only-locals  ::  
Only build packages in the local database, fail if the build plan includes the snapshot database

(stack build) --file-watch  ::  
Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file

(stack build) --file-watch-poll  ::  
Like --file-watch, but polling the filesystem instead of using events

(stack build) --watch-all  ::  
Watch all local files not taking targets into account

(stack build) --exec  ::  COMMAND [ARGUMENT(S)]
Command and argument(s) to run after a successful build

(stack build) --only-configure  ::  
Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!

(stack build) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack build) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack build) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack build) --library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack build) --no-library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack build) --executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack build) --no-executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack build) --library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack build) --no-library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack build) --executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack build) --no-executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack build) --haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack build) --no-haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack build) --haddock-arguments  ::  HADDOCK_ARGS
Arguments passed to the haddock program

(stack build) --open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack build) --no-open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack build) --haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack build) --no-haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack build) --haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack build) --no-haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack build) --haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack build) --no-haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack build) --copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack build) --no-copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack build) --copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack build) --no-copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack build) --prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack build) --no-prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack build) --keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack build) --no-keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack build) --keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack build) --no-keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack build) --force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack build) --no-force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack build) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack build) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack build) --rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack build) --no-rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack build) --ta --test-arguments  ::  TEST_ARGS
Arguments passed in to the test suite program

(stack build) --coverage  ::  
Generate a code coverage report

(stack build) --no-run-tests  ::  
Disable running of tests. (Tests will still be built.)

(stack build) --test-suite-timeout  ::  ARG
Maximum test suite run time in seconds.

(stack build) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack build) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack build) --ba --benchmark-arguments  ::  BENCH_ARGS
Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`

(stack build) --no-run-benchmarks  ::  
Disable running of benchmarks. (Benchmarks will still be built.)

(stack build) --reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack build) --no-reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack build) --cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack build) --no-cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack build) --split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack build) --no-split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack build) --skip  ::  ARG
Skip given component, can be specified multiple times

(stack build) --interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack build) --no-interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack build) --ddump-dir  ::  ARG
Specify output ddump-files

(stack build) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack build) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack build) --help  ::  
Show this help text




(stack install) --dry-run  ::  
Don't build anything, just prepare to

(stack install) --pedantic  ::  
Turn on -Wall and -Werror

(stack install) --fast  ::  
Turn off optimizations (-O0)

(stack install) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack install) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack install) --dependencies-only  ::  
A synonym for --only-dependencies

(stack install) --only-snapshot  ::  
Only build packages for the snapshot database, not the local database

(stack install) --only-dependencies  ::  
Only build packages that are dependencies of targets on the command line

(stack install) --only-locals  ::  
Only build packages in the local database, fail if the build plan includes the snapshot database

(stack install) --file-watch  ::  
Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file

(stack install) --file-watch-poll  ::  
Like --file-watch, but polling the filesystem instead of using events

(stack install) --watch-all  ::  
Watch all local files not taking targets into account

(stack install) --exec  ::  COMMAND [ARGUMENT(S)]
Command and argument(s) to run after a successful build

(stack install) --only-configure  ::  
Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!

(stack install) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack install) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack install) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack install) --library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack install) --no-library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack install) --executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack install) --no-executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack install) --library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack install) --no-library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack install) --executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack install) --no-executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack install) --haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack install) --no-haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack install) --haddock-arguments  ::  HADDOCK_ARGS
Arguments passed to the haddock program

(stack install) --open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack install) --no-open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack install) --haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack install) --no-haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack install) --haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack install) --no-haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack install) --haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack install) --no-haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack install) --copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack install) --no-copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack install) --copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack install) --no-copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack install) --prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack install) --no-prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack install) --keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack install) --no-keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack install) --keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack install) --no-keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack install) --force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack install) --no-force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack install) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack install) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack install) --rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack install) --no-rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack install) --ta --test-arguments  ::  TEST_ARGS
Arguments passed in to the test suite program

(stack install) --coverage  ::  
Generate a code coverage report

(stack install) --no-run-tests  ::  
Disable running of tests. (Tests will still be built.)

(stack install) --test-suite-timeout  ::  ARG
Maximum test suite run time in seconds.

(stack install) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack install) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack install) --ba --benchmark-arguments  ::  BENCH_ARGS
Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`

(stack install) --no-run-benchmarks  ::  
Disable running of benchmarks. (Benchmarks will still be built.)

(stack install) --reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack install) --no-reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack install) --cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack install) --no-cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack install) --split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack install) --no-split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack install) --skip  ::  ARG
Skip given component, can be specified multiple times

(stack install) --interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack install) --no-interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack install) --ddump-dir  ::  ARG
Specify output ddump-files

(stack install) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack install) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack install) --help  ::  
Show this help text




(stack uninstall) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack uninstall) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack uninstall) --help  ::  
Show this help text




(stack test) --dry-run  ::  
Don't build anything, just prepare to

(stack test) --pedantic  ::  
Turn on -Wall and -Werror

(stack test) --fast  ::  
Turn off optimizations (-O0)

(stack test) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack test) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack test) --dependencies-only  ::  
A synonym for --only-dependencies

(stack test) --only-snapshot  ::  
Only build packages for the snapshot database, not the local database

(stack test) --only-dependencies  ::  
Only build packages that are dependencies of targets on the command line

(stack test) --only-locals  ::  
Only build packages in the local database, fail if the build plan includes the snapshot database

(stack test) --file-watch  ::  
Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file

(stack test) --file-watch-poll  ::  
Like --file-watch, but polling the filesystem instead of using events

(stack test) --watch-all  ::  
Watch all local files not taking targets into account

(stack test) --exec  ::  COMMAND [ARGUMENT(S)]
Command and argument(s) to run after a successful build

(stack test) --only-configure  ::  
Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!

(stack test) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack test) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack test) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack test) --library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack test) --no-library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack test) --executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack test) --no-executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack test) --library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack test) --no-library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack test) --executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack test) --no-executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack test) --haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack test) --no-haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack test) --haddock-arguments  ::  HADDOCK_ARGS
Arguments passed to the haddock program

(stack test) --open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack test) --no-open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack test) --haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack test) --no-haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack test) --haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack test) --no-haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack test) --haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack test) --no-haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack test) --copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack test) --no-copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack test) --copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack test) --no-copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack test) --prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack test) --no-prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack test) --keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack test) --no-keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack test) --keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack test) --no-keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack test) --force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack test) --no-force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack test) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack test) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack test) --rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack test) --no-rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack test) --ta --test-arguments  ::  TEST_ARGS
Arguments passed in to the test suite program

(stack test) --coverage  ::  
Generate a code coverage report

(stack test) --no-run-tests  ::  
Disable running of tests. (Tests will still be built.)

(stack test) --test-suite-timeout  ::  ARG
Maximum test suite run time in seconds.

(stack test) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack test) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack test) --ba --benchmark-arguments  ::  BENCH_ARGS
Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`

(stack test) --no-run-benchmarks  ::  
Disable running of benchmarks. (Benchmarks will still be built.)

(stack test) --reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack test) --no-reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack test) --cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack test) --no-cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack test) --split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack test) --no-split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack test) --skip  ::  ARG
Skip given component, can be specified multiple times

(stack test) --interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack test) --no-interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack test) --ddump-dir  ::  ARG
Specify output ddump-files

(stack test) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack test) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack test) --help  ::  
Show this help text




(stack bench) --dry-run  ::  
Don't build anything, just prepare to

(stack bench) --pedantic  ::  
Turn on -Wall and -Werror

(stack bench) --fast  ::  
Turn off optimizations (-O0)

(stack bench) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack bench) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack bench) --dependencies-only  ::  
A synonym for --only-dependencies

(stack bench) --only-snapshot  ::  
Only build packages for the snapshot database, not the local database

(stack bench) --only-dependencies  ::  
Only build packages that are dependencies of targets on the command line

(stack bench) --only-locals  ::  
Only build packages in the local database, fail if the build plan includes the snapshot database

(stack bench) --file-watch  ::  
Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file

(stack bench) --file-watch-poll  ::  
Like --file-watch, but polling the filesystem instead of using events

(stack bench) --watch-all  ::  
Watch all local files not taking targets into account

(stack bench) --exec  ::  COMMAND [ARGUMENT(S)]
Command and argument(s) to run after a successful build

(stack bench) --only-configure  ::  
Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!

(stack bench) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack bench) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack bench) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack bench) --library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack bench) --no-library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack bench) --executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack bench) --no-executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack bench) --library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack bench) --no-library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack bench) --executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack bench) --no-executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack bench) --haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack bench) --no-haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack bench) --haddock-arguments  ::  HADDOCK_ARGS
Arguments passed to the haddock program

(stack bench) --open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack bench) --no-open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack bench) --haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack bench) --no-haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack bench) --haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack bench) --no-haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack bench) --haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack bench) --no-haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack bench) --copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack bench) --no-copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack bench) --copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack bench) --no-copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack bench) --prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack bench) --no-prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack bench) --keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack bench) --no-keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack bench) --keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack bench) --no-keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack bench) --force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack bench) --no-force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack bench) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack bench) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack bench) --rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack bench) --no-rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack bench) --ta --test-arguments  ::  TEST_ARGS
Arguments passed in to the test suite program

(stack bench) --coverage  ::  
Generate a code coverage report

(stack bench) --no-run-tests  ::  
Disable running of tests. (Tests will still be built.)

(stack bench) --test-suite-timeout  ::  ARG
Maximum test suite run time in seconds.

(stack bench) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack bench) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack bench) --ba --benchmark-arguments  ::  BENCH_ARGS
Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`

(stack bench) --no-run-benchmarks  ::  
Disable running of benchmarks. (Benchmarks will still be built.)

(stack bench) --reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack bench) --no-reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack bench) --cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack bench) --no-cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack bench) --split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack bench) --no-split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack bench) --skip  ::  ARG
Skip given component, can be specified multiple times

(stack bench) --interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack bench) --no-interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack bench) --ddump-dir  ::  ARG
Specify output ddump-files

(stack bench) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack bench) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack bench) --help  ::  
Show this help text




(stack haddock) --dry-run  ::  
Don't build anything, just prepare to

(stack haddock) --pedantic  ::  
Turn on -Wall and -Werror

(stack haddock) --fast  ::  
Turn off optimizations (-O0)

(stack haddock) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack haddock) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack haddock) --dependencies-only  ::  
A synonym for --only-dependencies

(stack haddock) --only-snapshot  ::  
Only build packages for the snapshot database, not the local database

(stack haddock) --only-dependencies  ::  
Only build packages that are dependencies of targets on the command line

(stack haddock) --only-locals  ::  
Only build packages in the local database, fail if the build plan includes the snapshot database

(stack haddock) --file-watch  ::  
Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file

(stack haddock) --file-watch-poll  ::  
Like --file-watch, but polling the filesystem instead of using events

(stack haddock) --watch-all  ::  
Watch all local files not taking targets into account

(stack haddock) --exec  ::  COMMAND [ARGUMENT(S)]
Command and argument(s) to run after a successful build

(stack haddock) --only-configure  ::  
Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!

(stack haddock) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack haddock) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack haddock) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack haddock) --library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack haddock) --no-library-profiling  ::  
Enable/disable library profiling for TARGETs and all its dependencies (default: disabled)

(stack haddock) --executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack haddock) --no-executable-profiling  ::  
Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)

(stack haddock) --library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack haddock) --no-library-stripping  ::  
Enable/disable library stripping for TARGETs and all its dependencies (default: enabled)

(stack haddock) --executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack haddock) --no-executable-stripping  ::  
Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)

(stack haddock) --haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack haddock) --no-haddock  ::  
Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)

(stack haddock) --haddock-arguments  ::  HADDOCK_ARGS
Arguments passed to the haddock program

(stack haddock) --open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack haddock) --no-open  ::  
Enable/disable opening the local Haddock documentation in the browser (default: disabled)

(stack haddock) --haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack haddock) --no-haddock-deps  ::  
Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)

(stack haddock) --haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack haddock) --no-haddock-internal  ::  
Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)

(stack haddock) --haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack haddock) --no-haddock-hyperlink-source  ::  
Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)

(stack haddock) --copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack haddock) --no-copy-bins  ::  
Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)

(stack haddock) --copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack haddock) --no-copy-compiler-tool  ::  
Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)

(stack haddock) --prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack haddock) --no-prefetch  ::  
Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)

(stack haddock) --keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack haddock) --no-keep-going  ::  
Enable/disable continue running after a step fails (default: false for build, true for test/bench)

(stack haddock) --keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack haddock) --no-keep-tmp-files  ::  
Enable/disable keep intermediate files and build directories (default: disabled)

(stack haddock) --force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack haddock) --no-force-dirty  ::  
Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)

(stack haddock) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack haddock) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack haddock) --rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack haddock) --no-rerun-tests  ::  
Enable/disable running already successful tests (default: enabled)

(stack haddock) --ta --test-arguments  ::  TEST_ARGS
Arguments passed in to the test suite program

(stack haddock) --coverage  ::  
Generate a code coverage report

(stack haddock) --no-run-tests  ::  
Disable running of tests. (Tests will still be built.)

(stack haddock) --test-suite-timeout  ::  ARG
Maximum test suite run time in seconds.

(stack haddock) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack haddock) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack haddock) --ba --benchmark-arguments  ::  BENCH_ARGS
Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`

(stack haddock) --no-run-benchmarks  ::  
Disable running of benchmarks. (Benchmarks will still be built.)

(stack haddock) --reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack haddock) --no-reconfigure  ::  
Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)

(stack haddock) --cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack haddock) --no-cabal-verbose  ::  
Enable/disable Ask Cabal to be verbose in its output (default: disabled)

(stack haddock) --split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack haddock) --no-split-objs  ::  
Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)

(stack haddock) --skip  ::  ARG
Skip given component, can be specified multiple times

(stack haddock) --interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack haddock) --no-interleaved-output  ::  
Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)

(stack haddock) --ddump-dir  ::  ARG
Specify output ddump-files

(stack haddock) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack haddock) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack haddock) --help  ::  
Show this help text




(stack new) --bare  ::  
Do not create a subdirectory for the project

(stack new) -p --param  ::  KEY:VALUE
Parameter for the template in the format key:value

(stack new) --omit-packages  ::  
Exclude conflicting or incompatible user packages

(stack new) --force  ::  
Force overwriting an existing stack.yaml

(stack new) --ignore-subdirs  ::  
Do not search for .cabal files in sub directories

(stack new) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack new) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack new) --help  ::  
Show this help text




(stack templates) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack templates) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack templates) --help  ::  
Show this help text




(stack init) --omit-packages  ::  
Exclude conflicting or incompatible user packages

(stack init) --force  ::  
Force overwriting an existing stack.yaml

(stack init) --ignore-subdirs  ::  
Do not search for .cabal files in sub directories

(stack init) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack init) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack init) --help  ::  
Show this help text




(stack setup) --reinstall  ::  
Enable/disable reinstalling GHC, even if available (incompatible with --system-ghc) (default: disabled)

(stack setup) --no-reinstall  ::  
Enable/disable reinstalling GHC, even if available (incompatible with --system-ghc) (default: disabled)

(stack setup) --ghc-bindist  ::  URL
Alternate GHC binary distribution (requires custom --ghc-variant)

(stack setup) --ghcjs-boot-options  ::  GHCJS_BOOT
Additional ghcjs-boot options

(stack setup) --ghcjs-boot-clean  ::  
Enable/disable Control if ghcjs-boot should have --clean option present (default: enabled)

(stack setup) --no-ghcjs-boot-clean  ::  
Enable/disable Control if ghcjs-boot should have --clean option present (default: enabled)

(stack setup) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack setup) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack setup) --help  ::  
Show this help text




(stack path) --stack-root  ::  
Global stack root directory

(stack path) --project-root  ::  
Project root (derived from stack.yaml file)

(stack path) --config-location  ::  
Configuration location (where the stack.yaml file is)

(stack path) --bin-path  ::  
PATH environment variable

(stack path) --programs  ::  
Install location for GHC and other core tools

(stack path) --compiler-exe  ::  
Compiler binary (e.g. ghc)

(stack path) --compiler-bin  ::  
Directory containing the compiler binary (e.g. ghc)

(stack path) --compiler-tools-bin  ::  
Directory containing binaries specific to a particular compiler (e.g. intero)

(stack path) --local-bin  ::  
Local bin dir where stack installs executables (e.g. ~/.local/bin (Unix-like OSs) or %APPDATA%\local\bin (Windows))

(stack path) --extra-include-dirs  ::  
Extra include directories

(stack path) --extra-library-dirs  ::  
Extra library directories

(stack path) --snapshot-pkg-db  ::  
Snapshot package database

(stack path) --local-pkg-db  ::  
Local project package database

(stack path) --global-pkg-db  ::  
Global package database

(stack path) --ghc-package-path  ::  
GHC_PACKAGE_PATH environment variable

(stack path) --snapshot-install-root  ::  
Snapshot installation root

(stack path) --local-install-root  ::  
Local project installation root

(stack path) --snapshot-doc-root  ::  
Snapshot documentation root

(stack path) --local-doc-root  ::  
Local project documentation root

(stack path) --local-hoogle-root  ::  
Local project documentation root

(stack path) --dist-dir  ::  
Dist work directory, relative to package directory

(stack path) --local-hpc-root  ::  
Where HPC reports and tix files are stored

(stack path) --local-bin-path  ::  
DEPRECATED: Use '--local-bin' instead

(stack path) --ghc-paths  ::  
DEPRECATED: Use '--programs' instead

(stack path) --global-stack-root  ::  
DEPRECATED: Use '--stack-root' instead

(stack path) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack path) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack path) --help  ::  
Show this help text




(stack ls) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ls) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ls) --help  ::  
Show this help text




(stack ls)
snapshots                 (View local snapshot (default option))
dependencies              (View the dependencies)
stack-colors              (View stack's output styles)
stack-colours             (View stack's output styles (alias for 'stack-colors'))



(stack ls snapshots) -l --lts  ::  
Only show lts snapshots

(stack ls snapshots) -n --nightly  ::  
Only show nightly snapshots

(stack ls snapshots) -h --help  ::  
Show this help text




(stack ls snapshots)
remote                    (View remote snapshot)
local                     (View local snapshot)



(stack ls dependencies) --separator  ::  SEP
Separator between package name and package version. (default: " ")

(stack ls dependencies) --license  ::  
Enable/disable printing of dependency licenses instead of versions (default: disabled)

(stack ls dependencies) --no-license  ::  
Enable/disable printing of dependency licenses instead of versions (default: disabled)

(stack ls dependencies) --external  ::  
Enable/disable inclusion of external dependencies (default: enabled)

(stack ls dependencies) --no-external  ::  
Enable/disable inclusion of external dependencies (default: enabled)

(stack ls dependencies) --include-base  ::  
Enable/disable inclusion of dependencies on base (default: enabled)

(stack ls dependencies) --no-include-base  ::  
Enable/disable inclusion of dependencies on base (default: enabled)

(stack ls dependencies) --depth  ::  DEPTH
Limit the depth of dependency resolution (Default: No limit)

(stack ls dependencies) --prune  ::  PACKAGES
Prune each package name from the comma separated list of package names PACKAGES

(stack ls dependencies) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack ls dependencies) --test  ::  
Consider dependencies of test components

(stack ls dependencies) --bench  ::  
Consider dependencies of benchmark components

(stack ls dependencies) --global-hints  ::  
Do not require an install GHC; instead, use a hints file for global packages

(stack ls dependencies) -h --help  ::  
Show this help text




(stack ls stack-colors) --basic  ::  
Enable/disable a basic report of the styles used. The default is a fuller one (default: disabled)

(stack ls stack-colors) --no-basic  ::  
Enable/disable a basic report of the styles used. The default is a fuller one (default: disabled)

(stack ls stack-colors) --sgr  ::  
Enable/disable the provision of the equivalent SGR instructions (provided by default). Flag ignored for a basic report (default: enabled)

(stack ls stack-colors) --no-sgr  ::  
Enable/disable the provision of the equivalent SGR instructions (provided by default). Flag ignored for a basic report (default: enabled)

(stack ls stack-colors) --example  ::  
Enable/disable the provision of an example of the applied style (provided by default for colored output). Flag ignored for a basic report (default: enabled)

(stack ls stack-colors) --no-example  ::  
Enable/disable the provision of an example of the applied style (provided by default for colored output). Flag ignored for a basic report (default: enabled)

(stack ls stack-colors) -h --help  ::  
Show this help text




(stack ls stack-colours) --basic  ::  
Enable/disable a basic report of the styles used. The default is a fuller one (default: disabled)

(stack ls stack-colours) --no-basic  ::  
Enable/disable a basic report of the styles used. The default is a fuller one (default: disabled)

(stack ls stack-colours) --sgr  ::  
Enable/disable the provision of the equivalent SGR instructions (provided by default). Flag ignored for a basic report (default: enabled)

(stack ls stack-colours) --no-sgr  ::  
Enable/disable the provision of the equivalent SGR instructions (provided by default). Flag ignored for a basic report (default: enabled)

(stack ls stack-colours) --example  ::  
Enable/disable the provision of an example of the applied style (provided by default for colored output). Flag ignored for a basic report (default: enabled)

(stack ls stack-colours) --no-example  ::  
Enable/disable the provision of an example of the applied style (provided by default for colored output). Flag ignored for a basic report (default: enabled)

(stack ls stack-colours) -h --help  ::  
Show this help text




(stack unpack) --to  ::  ARG
Optional path to unpack the package into (will unpack into subdirectory)

(stack unpack) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack unpack) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack unpack) --help  ::  
Show this help text




(stack update) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack update) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack update) --help  ::  
Show this help text




(stack upgrade) --source-only  ::  
Do not use a binary upgrade path

(stack upgrade) --binary-platform  ::  ARG
Platform type for archive to download

(stack upgrade) --force-download  ::  
Download the latest available stack executable

(stack upgrade) --binary-version  ::  ARG
Download a specific stack version

(stack upgrade) --github-org  ::  ARG
Github organization name

(stack upgrade) --github-repo  ::  ARG
Github repository name

(stack upgrade) --binary-only  ::  
Do not use a source upgrade path

(stack upgrade) --git  ::  
Clone from Git instead of downloading from Hackage (more dangerous)

(stack upgrade) --git-repo  ::  ARG
Clone from specified git repository (default: "https://github.com/commercialhaskell/stack")

(stack upgrade) --git-branch  ::  ARG
Clone from this git branch (default: "master")

(stack upgrade) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack upgrade) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack upgrade) --help  ::  
Show this help text




(stack upload) --pvp-bounds  ::  PVP-BOUNDS
How PVP version bounds should be added to .cabal file: none, lower, upper, both

(stack upload) --ignore-check  ::  
Do not check package for common mistakes

(stack upload) --test-tarball  ::  
Enable/disable building of the resulting tarball (default: disabled)

(stack upload) --no-test-tarball  ::  
Enable/disable building of the resulting tarball (default: disabled)

(stack upload) --tar-dir  ::  ARG
If specified, copy all the tar to this dir

(stack upload) --candidate  ::  
Upload as a package candidate

(stack upload) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack upload) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack upload) --help  ::  
Show this help text




(stack sdist) --pvp-bounds  ::  PVP-BOUNDS
How PVP version bounds should be added to .cabal file: none, lower, upper, both

(stack sdist) --ignore-check  ::  
Do not check package for common mistakes

(stack sdist) --test-tarball  ::  
Enable/disable building of the resulting tarball (default: disabled)

(stack sdist) --no-test-tarball  ::  
Enable/disable building of the resulting tarball (default: disabled)

(stack sdist) --tar-dir  ::  ARG
If specified, copy all the tar to this dir

(stack sdist) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack sdist) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack sdist) --help  ::  
Show this help text




(stack dot) --external  ::  
Enable/disable inclusion of external dependencies (default: disabled)

(stack dot) --no-external  ::  
Enable/disable inclusion of external dependencies (default: disabled)

(stack dot) --include-base  ::  
Enable/disable inclusion of dependencies on base (default: enabled)

(stack dot) --no-include-base  ::  
Enable/disable inclusion of dependencies on base (default: enabled)

(stack dot) --depth  ::  DEPTH
Limit the depth of dependency resolution (Default: No limit)

(stack dot) --prune  ::  PACKAGES
Prune each package name from the comma separated list of package names PACKAGES

(stack dot) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack dot) --test  ::  
Consider dependencies of test components

(stack dot) --bench  ::  
Consider dependencies of benchmark components

(stack dot) --global-hints  ::  
Do not require an install GHC; instead, use a hints file for global packages

(stack dot) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack dot) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack dot) --help  ::  
Show this help text




(stack ghc) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack ghc) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack ghc) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack ghc) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack ghc) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack ghc) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack ghc) --cwd  ::  DIR
Sets the working directory before executing

(stack ghc) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ghc) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ghc) --help  ::  
Show this help text




(stack hoogle) --setup  ::  
Enable/disable If needed: install hoogle, build haddocks and generate a hoogle database (default: enabled)

(stack hoogle) --no-setup  ::  
Enable/disable If needed: install hoogle, build haddocks and generate a hoogle database (default: enabled)

(stack hoogle) --rebuild  ::  
Rebuild the hoogle database

(stack hoogle) --server  ::  
Start local Hoogle server

(stack hoogle) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack hoogle) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack hoogle) --help  ::  
Show this help text




(stack exec) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack exec) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack exec) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack exec) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack exec) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack exec) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack exec) --cwd  ::  DIR
Sets the working directory before executing

(stack exec) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack exec) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack exec) --help  ::  
Show this help text




(stack run) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack run) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack run) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack run) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack run) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack run) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack run) --cwd  ::  DIR
Sets the working directory before executing

(stack run) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack run) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack run) --help  ::  
Show this help text




(stack ghci) --pedantic  ::  
Turn on -Wall and -Werror

(stack ghci) --ghci-options  ::  OPTIONS
Additional options passed to GHCi

(stack ghci) --ghc-options  ::  OPTIONS
Additional options passed to both GHC and GHCi

(stack ghci) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack ghci) --with-ghc  ::  GHC
Use this GHC to run GHCi

(stack ghci) --load  ::  
Enable/disable load modules on start-up (default: enabled)

(stack ghci) --no-load  ::  
Enable/disable load modules on start-up (default: enabled)

(stack ghci) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack ghci) --main-is  ::  TARGET
Specify which target should contain the main module to load, such as for an executable for test suite or benchmark.

(stack ghci) --load-local-deps  ::  
Load all local dependencies of your targets

(stack ghci) --package-hiding  ::  
Enable/disable package hiding

(stack ghci) --no-package-hiding  ::  
Enable/disable package hiding

(stack ghci) --only-main  ::  
Only load and import the main module. If no main module, no modules will be loaded.

(stack ghci) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack ghci) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack ghci) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack ghci) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack ghci) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack ghci) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack ghci) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack ghci) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ghci) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ghci) --help  ::  
Show this help text




(stack repl) --pedantic  ::  
Turn on -Wall and -Werror

(stack repl) --ghci-options  ::  OPTIONS
Additional options passed to GHCi

(stack repl) --ghc-options  ::  OPTIONS
Additional options passed to both GHC and GHCi

(stack repl) --flag  ::  PACKAGE:[-]FLAG
Override flags set in stack.yaml (applies to local packages and extra-deps)

(stack repl) --with-ghc  ::  GHC
Use this GHC to run GHCi

(stack repl) --load  ::  
Enable/disable load modules on start-up (default: enabled)

(stack repl) --no-load  ::  
Enable/disable load modules on start-up (default: enabled)

(stack repl) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack repl) --main-is  ::  TARGET
Specify which target should contain the main module to load, such as for an executable for test suite or benchmark.

(stack repl) --load-local-deps  ::  
Load all local dependencies of your targets

(stack repl) --package-hiding  ::  
Enable/disable package hiding

(stack repl) --no-package-hiding  ::  
Enable/disable package hiding

(stack repl) --only-main  ::  
Only load and import the main module. If no main module, no modules will be loaded.

(stack repl) --trace  ::  
Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception

(stack repl) --profile  ::  
profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks

(stack repl) --no-strip  ::  
Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols.

(stack repl) --test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack repl) --no-test  ::  
Enable/disable testing the package(s) in this directory/configuration (default: disabled)

(stack repl) --bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack repl) --no-bench  ::  
Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)

(stack repl) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack repl) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack repl) --help  ::  
Show this help text




(stack runghc) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack runghc) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack runghc) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack runghc) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack runghc) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack runghc) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack runghc) --cwd  ::  DIR
Sets the working directory before executing

(stack runghc) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack runghc) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack runghc) --help  ::  
Show this help text




(stack runhaskell) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack runhaskell) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack runhaskell) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack runhaskell) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack runhaskell) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack runhaskell) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack runhaskell) --cwd  ::  DIR
Sets the working directory before executing

(stack runhaskell) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack runhaskell) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack runhaskell) --help  ::  
Show this help text




(stack script) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack script) --compile  ::  
Compile the script without optimization and run the executable

(stack script) --optimize  ::  
Compile the script with optimization and run the executable

(stack script) --ghc-options  ::  OPTIONS
Additional options passed to GHC

(stack script) --extra-dep  ::  PACKAGE-VERSION
Extra dependencies to be added to the snapshot

(stack script) --no-run  ::  
Don't run, just compile.

(stack script) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack script) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack script) --help  ::  
Show this help text




(stack eval) --ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack eval) --no-ghc-package-path  ::  
Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)

(stack eval) --stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack eval) --no-stack-exe  ::  
Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)

(stack eval) --package  ::  PACKAGE(S)
Additional package(s) that must be installed

(stack eval) --rts-options  ::  RTSFLAG
Explicit RTS options to pass to application

(stack eval) --cwd  ::  DIR
Sets the working directory before executing

(stack eval) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack eval) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack eval) --help  ::  
Show this help text




(stack clean) --full  ::  
Delete the project’s stack working directories (.stack-work by default).

(stack clean) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack clean) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack clean) --help  ::  
Show this help text




(stack purge) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack purge) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack purge) --help  ::  
Show this help text




(stack query) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack query) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack query) --help  ::  
Show this help text




(stack list) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack list) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack list) --help  ::  
Show this help text




(stack ide) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ide) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ide) --help  ::  
Show this help text




(stack ide)
packages                  (List all available local loadable packages)
targets                   (List all available stack targets)



(stack ide packages) --stdout  ::  
Send output to stdout instead of the default, stderr

(stack ide packages) --cabal-files  ::  
Print paths to package cabal-files instead of package names

(stack ide packages) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ide packages) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ide packages) --help  ::  
Show this help text




(stack ide targets) --stdout  ::  
Send output to stdout instead of the default, stderr

(stack ide targets) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack ide targets) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack ide targets) --help  ::  
Show this help text




(stack docker) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack docker) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack docker) --help  ::  
Show this help text




(stack docker)
pull                      (Pull latest version of Docker image from registry)
reset                     (Reset the Docker sandbox)



(stack docker pull) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack docker pull) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack docker pull) --help  ::  
Show this help text




(stack docker reset) --keep-home  ::  
Do not delete sandbox's home directory

(stack docker reset) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack docker reset) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack docker reset) --help  ::  
Show this help text




(stack config) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack config) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack config) --help  ::  
Show this help text




(stack config)
set                       (Sets a field in the project's stack.yaml to value)
env                       (Print environment variables for use in a shell)



(stack config set) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack config set) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack config set) --help  ::  
Show this help text




(stack config set)
resolver                  (Change the resolver of the current project. See)
system-ghc                (Configure whether stack should use a system GHC)
install-ghc               (Configure whether stack should automatically install)



(stack config set resolver) -h --help  ::  
Show this help text




(stack config set system-ghc) --global  ::  
Modify the global configuration (typically at "~/.stack/config.yaml") instead of the project stack.yaml.

(stack config set system-ghc) -h --help  ::  
Show this help text




(stack config set install-ghc) --global  ::  
Modify the global configuration (typically at "~/.stack/config.yaml") instead of the project stack.yaml.

(stack config set install-ghc) -h --help  ::  
Show this help text




(stack config env) --locals  ::  
Enable/disable include local package information (default: enabled)

(stack config env) --no-locals  ::  
Enable/disable include local package information (default: enabled)

(stack config env) --ghc-package-path  ::  
Enable/disable set GHC_PACKAGE_PATH variable (default: enabled)

(stack config env) --no-ghc-package-path  ::  
Enable/disable set GHC_PACKAGE_PATH variable (default: enabled)

(stack config env) --stack-exe  ::  
Enable/disable set STACK_EXE environment variable (default: enabled)

(stack config env) --no-stack-exe  ::  
Enable/disable set STACK_EXE environment variable (default: enabled)

(stack config env) --locale-utf8  ::  
Enable/disable set the GHC_CHARENC environment variable to UTF8 (default: disabled)

(stack config env) --no-locale-utf8  ::  
Enable/disable set the GHC_CHARENC environment variable to UTF8 (default: disabled)

(stack config env) --keep-ghc-rts  ::  
Enable/disable keep any GHC_RTS environment variables (default: disabled)

(stack config env) --no-keep-ghc-rts  ::  
Enable/disable keep any GHC_RTS environment variables (default: disabled)

(stack config env) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack config env) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack config env) --help  ::  
Show this help text




(stack hpc) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack hpc) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack hpc) --help  ::  
Show this help text




(stack hpc)
report                    (Generate unified HPC coverage report from tix files)



(stack hpc report) --all  ::  
Use results from all packages and components involved in previous --coverage run

(stack hpc report) --destdir  ::  DIR
Output directory for HTML report

(stack hpc report) --open  ::  
Open the report in the browser

(stack hpc report) --setup-info-yaml  ::  URL
Alternate URL or relative / absolute path for stack dependencies

(stack hpc report) --snapshot-location-base  ::  URL
The base location of LTS/Nightly snapshots

(stack hpc report) --help  ::  
Show this help text

